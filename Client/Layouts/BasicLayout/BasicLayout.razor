@namespace Client.Layout
@inherits LayoutComponentBase
@using Blazored.LocalStorage

<CascadingValue Value="@this" IsFixed>
	<AntDesign.ProLayout.BasicLayout Logo="@($"{Api.BaseUrl}/asset/logo")" MenuData="@(View == Role.Student ? StudentMenu : AdminMenu)">
		<RightContentRender>
			<Client.Components.RightContent User="@CurrentUser" Avatar="@CurrentUserAvatar" />
		</RightContentRender>
		<ChildContent>
			@Body
		</ChildContent>
		<FooterRender>
			<FooterView Style="margin-top:24px" Copyright="飞姐" Links="Links" />
		</FooterRender>
	</AntDesign.ProLayout.BasicLayout>
	<SettingDrawer />
</CascadingValue>

@code{

	private static MenuDataItem[] StudentMenu { get; } = {
		new MenuDataItem {
			Path = "/",
			Name = "主页",
			Key = "main",
			Icon = "dashboard"
		},
		new MenuDataItem {
			Path = "/assignment",
			Name = "作业",
			Key = "list",
			Icon = "unordered-list"
		},
		new MenuDataItem {
			Path = "/question",
			Name = "Q & A",
			Key = "question",
			Icon = "question-circle"
		},
		new MenuDataItem {
			Path = "/about",
			Name = "关于课程",
			Key = "about",
			Icon = "info-circle"
		}
	};

	private static MenuDataItem[] AdminMenu { get; } = {
		new MenuDataItem {
			Path = "/admin",
			Name = "仪表盘",
			Key = "dashboard",
			Icon="dashboard"
		},
		new MenuDataItem {
			Path = "/admin/user",
			Name = "用户管理",
			Key="user",
			Icon = "user"
		},
		new MenuDataItem {
			Path = "/admin/problem",
			Name = "题目管理",
			Key="problem",
			Icon = "user"
		},
		new MenuDataItem {
			Path = "/admin/assignment",
			Name = "作业管理",
			Key="assignment",
			Icon = "user"
		}
	};

	public Role View { get; set; } = Role.Student;

	[Inject]
	private ApiClient Api { get; set; }

	[Inject]
	private ISyncLocalStorageService LocalStorage { get; set; }

	public LinkItem[] Links { get; } = {
		new() {
			Key = "Ant Design",
			Title = "Ant Design",
			Href = "https://antblazor.com",
			BlankTarget = true
		},
		new() {
			Key = "Blazor",
			Title = "Blazor",
			Href = "https://dotnet.microsoft.com/en-us/apps/aspnet/web-apps/blazor",
			BlankTarget = true
		},
		new() {
			Key = "Author",
			Title = (RenderFragment)(@<Icon Type="github" />),
			Href = "https://github.com/truemogician",
			BlankTarget = true
		}
	};

	private User CurrentUser { get; set; }

	private string? CurrentUserAvatar { get; set; }

	public void Refresh() => StateHasChanged();

	protected override async Task OnInitializedAsync() {
		await base.OnInitializedAsync();
		CurrentUser = LocalStorage.GetItem<User>("currentUser");
		CurrentUserAvatar = LocalStorage.GetItem<string?>("currentUserAvatar");
	}

}
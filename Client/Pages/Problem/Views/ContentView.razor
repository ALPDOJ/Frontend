@namespace Client.Pages.Problem

<GridContent>
	@if (Problem is null) {
		for (int i = 0; i < 2; ++i) {
			<Card Loading Class="content-card" />
		}
	}
	else {
		<Card Class="content-card" Title="@("题目描述")">
			<RichTextDisplayer Value="@Problem.Content.Description" />
		</Card>

		@if (Problem.Content.Format is not null) {
			<Card Title="@("数据格式")" Class="content-card" BodyStyle="display:flex">
				<Card Title="输入" Bordered  Style="flex-grow: 1">
					@Problem.Content.Format.Input
				</Card>
				<Card Title="输出" Bordered  Style="flex-grow: 1">
					@Problem.Content.Format.Output
				</Card>
			</Card>
		}

		@if (Examples?.Count > 0) {
			<Card Title="@("样例")" Class="content-card">
				<Row Gutter="@((Gutter, Gutter))" Align="top">
					@foreach (var example in Examples) {
						<AntDesign.Col Span="12">
							<Descriptions Bordered Column="2">
								@if (example.Input is not null) {
									<DescriptionsItem Title="输入">
										@example.Input
									</DescriptionsItem>
								}
								<DescriptionsItem Title="输出" Span="@(example.Input is null ? 2 : 1)">
									@example.Expect
								</DescriptionsItem>
								@if (example.Explanation is not null) {
									<DescriptionsItem Title="样例解释" Span="2">
										@example.Explanation
									</DescriptionsItem>
								}
							</Descriptions>
						</AntDesign.Col>
					}
				</Row>
			</Card>
		}

		@if (Problem.Content.InputRange is not null) {
			<Card Class="content-card" Title="输入数据范围">
				<AntList Bordered DataSource="Problem.Content.InputRange!">
					<ListItem>
						@context.Description
					</ListItem>
				</AntList>
			</Card>
		}

		@if (Problem.Content.Limitation is not null) {
			<Card Class="content-card" Title="代码限制">
				<Text>@Problem.Content.Limitation</Text>
			</Card>
		}
	}
</GridContent>

<style lang="css" scoped>
	.ant-card.content-card {
		margin-top: 24px;
	}
</style>

@code {
	private static Dictionary<string, int> Gutter { get; } = new() {
		["xs"] = 8,
		["sm"] = 16,
		["md"] = 24,
		["lg"] = 32,
		["xl"] = 48,
		["xxl"] = 64
	};

	[Parameter]
	public Problem? Problem { get; set; }

	[Parameter]
	public IList<TestCase>? Examples { get; set; }
}

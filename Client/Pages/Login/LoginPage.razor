@namespace Client.Pages
@page "/login"
@layout LoginLayout
@using Blazored.LocalStorage

<div class="main__b__0">
	<div class="login">
		<Form Model="@Parameters" OnFinish="OnSubmit">
			<FormItem>
				<AntDesign.Input @bind-Value="@context.Id" Placeholder="学号" Size="@InputSize.Large" Class="input">
					<Prefix>
						<Icon Type="user" />
					</Prefix>
				</AntDesign.Input>
			</FormItem>
			<FormItem>
				<AntDesign.Input @bind-Value="@context.Password" Placeholder="密码" Size="@InputSize.Large"
					Type="password" Class="input">
					<Prefix>
						<Icon Type="lock" />
					</Prefix>
				</AntDesign.Input>
			</FormItem>
			<div>
				<Checkbox Checked="@AutoLogin">
					自动登录
				</Checkbox>
				<a style="float: right;">
					忘记密码
				</a>
			</div>
			<Button Block Class="submit" HtmlType="submit" Size="@ButtonSize.Large" Type="@ButtonType.Primary">登录</Button>
		</Form>
	</div>
</div>

<style lang="css" scoped>
	.main__b__0 {
		margin: 0 auto;
		width: 368px;
	}

	.main__b__0 .login .icon { color: #1890ff; }

	.main__b__0 .login .other {
		line-height: 22px;
		margin-top: 24px;
		text-align: left;
	}

	.main__b__0 .login .other .icon {
		color: rgba(0, 0, 0, 0.45);
		cursor: pointer;
		font-size: 24px;
		margin-left: 16px;
		transition: color 0.3s;
		vertical-align: middle;
	}

	.main__b__0 .login .other .icon:hover { color: #1890ff; }

	.main__b__0 .login .other .register { float: right; }

	.main__b__0 .login .prefixIcon {
		color: rgba(0, 0, 0, 0.25);
		font-size: 14px;
	}

	.main__b__0 .login .submit {
		margin-top: 32px;
		width: 100%;
	}

	.main__b__0 .input {
		border-radius: 5px;
	}
</style>

@code {

	[Inject]
	private NavigationManager Navigator { get; set; }

	[Inject]
	private ApiClient Api { get; set; }

	[Inject]
	private MessageService MessageService { get; set; }

	[Inject]
	private ISyncLocalStorageService LocalStorage { get; set; }

	private LoginParameters Parameters { get; } = new();

	private bool AutoLogin { get; set; }

	public async void OnSubmit() {
		try {
			await Api.LoginAsync(Parameters.Id,Parameters.Password);
			LocalStorage.SetItem("currentUser", await Api.GetCurrentUserAsync());
			try {
				var resp = await Api.GetUserAvatarAsync(Parameters.Id);
				var memoryStream = new MemoryStream();
				await resp.Stream.CopyToAsync(memoryStream);
				var base64Image = Convert.ToBase64String(memoryStream.ToArray());
				LocalStorage.SetItem("currentUserAvatar", $"data:{resp.Headers["Content-Type"]};base64,{base64Image}");
			}
			catch (ApiException ex) {
				if (ex.StatusCode == 404)
					LocalStorage.SetItem<string?>("currentUserAvatar", null);
				else
					throw;
			}
			Navigator.NavigateTo("/");
		}
		catch (ApiException ex) {
			var _ = MessageService.Error(ex.Message);
		}
	}
}
